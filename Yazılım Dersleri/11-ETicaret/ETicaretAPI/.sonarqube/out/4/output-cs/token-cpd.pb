ª
éD:\Ki≈üisel\Private-Yazilim-Dersleri\Yazƒ±lƒ±m Dersleri\11-ETicaret\ETicaretAPI\Infrastructure\ETicaretAPI.Infrastructure\Enums\StorageType.cs
	namespace 	
ETicaretAPI
 
. 
Infrastructure $
.$ %
Enums% *
{ 
public		 

enum		 
StorageType		 
{

 
Local 
= 
$num 
, 
AWS 
= 
$num 
, 
Azure 
= 
$num 
} 
} ß
ïD:\Ki≈üisel\Private-Yazilim-Dersleri\Yazƒ±lƒ±m Dersleri\11-ETicaret\ETicaretAPI\Infrastructure\ETicaretAPI.Infrastructure\Filters\ValidationFilter.cs
	namespace 	
ETicaretAPI
 
. 
Infrastructure $
.$ %
Filters% ,
{ 
public 

class 
ValidationFilter !
:" #
IAsyncActionFilter$ 6
{ 
public 
async 
Task "
OnActionExecutionAsync 0
(0 1"
ActionExecutingContext1 G
contextH O
,O P#
ActionExecutionDelegateQ h
nexti m
)m n
{		 	
if

 
(

 
!

 
context

 
.

 

ModelState

 #
.

# $
IsValid

$ +
)

+ ,
{ 
var 
errors 
= 
context $
.$ %

ModelState% /
. 
Where 
( 
x 
=> 
x  !
.! "
Value" '
.' (
Errors( .
.. /
Any/ 2
(2 3
)3 4
)4 5
. 
ToDictionary !
(! "
e" #
=>$ &
e' (
.( )
Key) ,
,, -
e. /
=>0 2
e3 4
.4 5
Value5 :
.: ;
Errors; A
.A B
SelectB H
(H I
eI J
=>K M
eN O
.O P
ErrorMessageP \
)\ ]
)] ^
. 
ToArray 
( 
) 
; 
context 
. 
Result 
=  
new! $"
BadRequestObjectResult% ;
(; <
errors< B
)B C
;C D
return 
; 
} 
await 
next 
( 
) 
; 
} 	
} 
} ∏*
ïD:\Ki≈üisel\Private-Yazilim-Dersleri\Yazƒ±lƒ±m Dersleri\11-ETicaret\ETicaretAPI\Infrastructure\ETicaretAPI.Infrastructure\Operations\NameOperation.cs
	namespace 	
ETicaretAPI
 
. 
Infrastructure $
.$ %
StaticService% 2
{ 
public		 

static		 
class		 
NameOperation		 %
{

 
public 
static 
string 
CharacterRegulatory 0
(0 1
string1 7
name8 <
)< =
=> 
name 
. 
Replace 
( 
$str !
,! "
$str# %
)% &
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str "
)" #
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
. 
Replace 
( 
$str 
, 
$str !
)! "
.   
Replace   
(   
$str   
,   
$str   !
)  ! "
.!! 
Replace!! 
(!! 
$str!! 
,!! 
$str!! "
)!!" #
."" 
Replace"" 
("" 
$str"" 
,"" 
$str"" "
)""" #
.## 
Replace## 
(## 
$str## 
,## 
$str## "
)##" #
.$$ 
Replace$$ 
($$ 
$str$$ 
,$$ 
$str$$ "
)$$" #
.%% 
Replace%% 
(%% 
$str%% 
,%% 
$str%% "
)%%" #
.&& 
Replace&& 
(&& 
$str&& 
,&& 
$str&& "
)&&" #
.'' 
Replace'' 
('' 
$str'' 
,'' 
$str'' "
)''" #
.(( 
Replace(( 
((( 
$str(( 
,(( 
$str(( "
)((" #
.)) 
Replace)) 
()) 
$str)) 
,)) 
$str)) "
)))" #
.** 
Replace** 
(** 
$str** 
,** 
$str** !
)**! "
.++ 
Replace++ 
(++ 
$str++ 
,++ 
$str++ !
)++! "
.,, 
Replace,, 
(,, 
$str,, 
,,, 
$str,, "
),," #
.-- 
Replace-- 
(-- 
$str-- 
,-- 
$str-- "
)--" #
... 
Replace.. 
(.. 
$str.. 
,.. 
$str.. "
).." #
.// 
Replace// 
(// 
$str// 
,// 
$str// "
)//" #
.00 
Replace00 
(00 
$str00 
,00 
$str00 "
)00" #
.11 
Replace11 
(11 
$str11 
,11 
$str11 "
)11" #
.22 
Replace22 
(22 
$str22 
,22 
$str22 !
)22! "
.33 
Replace33 
(33 
$str33 
,33 
$str33 !
)33! "
.44 
Replace44 
(44 
$str44 
,44 
$str44 !
)44! "
;44" #
}55 
}66 ’
êD:\Ki≈üisel\Private-Yazilim-Dersleri\Yazƒ±lƒ±m Dersleri\11-ETicaret\ETicaretAPI\Infrastructure\ETicaretAPI.Infrastructure\ServiceRegistration.cs
	namespace 	
ETicaretAPI
 
. 
Infrastructure $
{ 
public		 

static		 
class		 
ServiceRegistration		 +
{

 
public 
static 
void %
AddInfrastructureServices 4
(4 5
this5 9
IServiceCollection: L
serviceCollectionM ^
)^ _
{ 	
serviceCollection 
. 
	AddScoped '
<' (
IStorageService( 7
,7 8
StorageService9 G
>G H
(H I
)I J
;J K
serviceCollection 
. 
	AddScoped '
<' (
ITokenHandler( 5
,5 6
TokenHandler7 C
>C D
(D E
)E F
;F G
} 	
public 
static 
void 

AddStorage %
<% &
T& '
>' (
(( )
this) -
IServiceCollection. @
serviceCollectionA R
)R S
whereT Y
TZ [
:\ ]
Storage^ e
,e f
IStorageg o
{ 	
serviceCollection 
. 
	AddScoped '
<' (
IStorage( 0
,0 1
T2 3
>3 4
(4 5
)5 6
;6 7
} 	
} 
} ø0
†D:\Ki≈üisel\Private-Yazilim-Dersleri\Yazƒ±lƒ±m Dersleri\11-ETicaret\ETicaretAPI\Infrastructure\ETicaretAPI.Infrastructure\Services\Storage\Azure\AzureStorage.cs
	namespace 	
ETicaretAPI
 
. 
Infrastructure $
.$ %
Services% -
.- .
Storage. 5
.5 6
Azure6 ;
{ 
public 

class 
AzureStorage 
: 
Storage  '
,' (
IAzureStorage) 6
{ 
private 
readonly 
BlobServiceClient *
_blobServiceClient+ =
;= >
BlobContainerClient  
_blobContainerClient 0
;0 1
public 
AzureStorage 
( 
IConfiguration *
configuration+ 8
)8 9
{ 	
_blobServiceClient 
=  
new! $
($ %
configuration% 2
[2 3
$str3 B
]B C
)C D
;D E
} 	
public 
async 
Task 

DeleteAsyc $
($ %
string% +
containerName, 9
,9 :
string; A
fileNameB J
)J K
{ 	 
_blobContainerClient  
=! "
_blobServiceClient# 5
.5 6"
GetBlobContainerClient6 L
(L M
containerNameM Z
)Z [
;[ \

BlobClient 

blobClient !
=" # 
_blobContainerClient$ 8
.8 9
GetBlobClient9 F
(F G
fileNameG O
)O P
;P Q
await 

blobClient 
. 
DeleteAsync (
(( )
)) *
;* +
} 	
public   
List   
<   
string   
>   
GetFiles   $
(  $ %
string  % +
containerName  , 9
)  9 :
{!! 	 
_blobContainerClient""  
=""! "
_blobServiceClient""# 5
.""5 6"
GetBlobContainerClient""6 L
(""L M
containerName""M Z
)""Z [
;""[ \
return##  
_blobContainerClient## '
.##' (
GetBlobs##( 0
(##0 1
)##1 2
.##2 3
Select##3 9
(##9 :
y##: ;
=>##< >
y##? @
.##@ A
Name##A E
)##E F
.##F G
ToList##G M
(##M N
)##N O
;##O P
}$$ 	
public&& 
bool&& 
HasFile&& 
(&& 
string&& "
containerName&&# 0
,&&0 1
string&&2 8
fileName&&9 A
)&&A B
{'' 	 
_blobContainerClient((  
=((! "
_blobServiceClient((# 5
.((5 6"
GetBlobContainerClient((6 L
(((L M
containerName((M Z
)((Z [
;(([ \
return))  
_blobContainerClient)) '
.))' (
GetBlobs))( 0
())0 1
)))1 2
.))2 3
Any))3 6
())6 7
y))7 8
=>))9 ;
y))< =
.))= >
Name))> B
==))C E
fileName))F N
)))N O
;))O P
}** 	
public,, 
async,, 
Task,, 
<,, 
List,, 
<,, 
(,,  
string,,  &
fileName,,' /
,,,/ 0
string,,1 7
path,,8 <
),,< =
>,,= >
>,,> ?
UploadAsync,,@ K
(,,K L
string,,L R
containerName,,S `
,,,` a
IFormFileCollection,,b u
files,,v {
),,{ |
{-- 	 
_blobContainerClient..  
=..! "
_blobServiceClient..# 5
...5 6"
GetBlobContainerClient..6 L
(..L M
containerName..M Z
)..Z [
;..[ \
await00  
_blobContainerClient00 &
.00& '"
CreateIfNotExistsAsync00' =
(00= >
PublicAccessType00> N
.00N O
Blob00O S
)00S T
;00T U
await11  
_blobContainerClient11 &
.11& ' 
SetAccessPolicyAsync11' ;
(11; <
PublicAccessType11< L
.11L M
BlobContainer11M Z
)11Z [
;11[ \
List22 
<22 
(22 
string22 
fileName22 !
,22! "
string22# )
path22* .
)22. /
>22/ 0
datas221 6
=227 8
new229 <
List22= A
<22A B
(22B C
string22C I
fileName22J R
,22R S
string22T Z
path22[ _
)22_ `
>22` a
(22a b
)22b c
;22c d
foreach44 
(44 
	IFormFile44 
file44 #
in44$ &
files44' ,
)44, -
{55 
string66 
fileNewName66 "
=66# $
await66% *
FileRenameAsync66+ :
(66: ;
containerName66; H
,66H I
file66J N
.66N O
Name66O S
,66S T
HasFile66U \
)66\ ]
;66] ^

BlobClient77 

blobClient77 %
=77& ' 
_blobContainerClient77( <
.77< =
GetBlobClient77= J
(77J K
fileNewName77K V
)77V W
;77W X
await88 

blobClient88  
.88  !
UploadAsync88! ,
(88, -
file88- 1
.881 2
OpenReadStream882 @
(88@ A
)88A B
)88B C
;88C D
datas99 
.99 
Add99 
(99 
(99 
file99 
.99  
Name99  $
,99$ %
$"99& (
{99( )
containerName99) 6
}996 7
$str997 8
{998 9
fileNewName999 D
}99D E
"99E F
)99F G
)99G H
;99H I
}:: 
return;; 
datas;; 
;;; 
}<< 	
}== 
}>> ≈3
†D:\Ki≈üisel\Private-Yazilim-Dersleri\Yazƒ±lƒ±m Dersleri\11-ETicaret\ETicaretAPI\Infrastructure\ETicaretAPI.Infrastructure\Services\Storage\Local\LocalStorage.cs
	namespace 	
ETicaretAPI
 
. 
Infrastructure $
.$ %
Services% -
.- .
Storage. 5
.5 6
Local6 ;
{ 
public 

class 
LocalStorage 
: 
Storage  '
,' (
ILocalStorage) 6
{		 
private

 
readonly

 
IWebHostEnvironment

 ,
_webHostEnvironment

- @
;

@ A
public 
LocalStorage 
( 
IWebHostEnvironment /
webHostEnvironment0 B
)B C
{ 	
_webHostEnvironment 
=  !
webHostEnvironment" 4
;4 5
} 	
public 
async 
Task 

DeleteAsyc $
($ %
string% +
path, 0
,0 1
string2 8
fileName9 A
)A B
=> 
File 
. 
Delete 
( 
$" 
{ 
path "
}" #
$str# %
{% &
fileName& .
}. /
"/ 0
)0 1
;1 2
public 
List 
< 
string 
> 
GetFiles $
($ %
string% +
path, 0
)0 1
{ 	
DirectoryInfo 
	directory #
=$ %
new& )
DirectoryInfo* 7
(7 8
path8 <
)< =
;= >
return 
	directory 
. 
GetFiles %
(% &
)& '
.' (
Select( .
(. /
x/ 0
=>1 3
x4 5
.5 6
Name6 :
): ;
.; <
ToList< B
(B C
)C D
;D E
} 	
public 
bool 
HasFile 
( 
string "
path# '
,' (
string) /
fileName0 8
)8 9
=> 
File 
. 
Exists 
( 
$" 
{ 
path "
}" #
$str# %
{% &
fileName& .
}. /
"/ 0
)0 1
;1 2
public 
async 
Task 
< 
List 
< 
(  
string  &
fileName' /
,/ 0
string1 7
path8 <
)< =
>= >
>> ?
UploadAsync@ K
(K L
stringL R
pathS W
,W X
IFormFileCollectionY l
filesm r
)r s
{ 	
string 

uploadPath 
= 
Path  $
.$ %
Combine% ,
(, -
_webHostEnvironment- @
.@ A
WebRootPathA L
,L M
pathN R
)R S
;S T
if 
( 
! 
	Directory 
. 
Exists !
(! "

uploadPath" ,
), -
)- .
	Directory   
.   
CreateDirectory   )
(  ) *

uploadPath  * 4
)  4 5
;  5 6
List"" 
<"" 
("" 
string"" 
fileName"" !
,""! "
string""# )
path""* .
)"". /
>""/ 0
datas""1 6
=""7 8
new""9 <
List""= A
<""A B
(""B C
string""C I
fileName""J R
,""R S
string""T Z
path""[ _
)""_ `
>""` a
(""a b
)""b c
;""c d
foreach$$ 
($$ 
	IFormFile$$ 
file$$ #
in$$$ &
files$$' ,
)$$, -
{%% 
string&& 
fileNewName&& "
=&&# $
await&&% *
FileRenameAsync&&+ :
(&&: ;

uploadPath&&; E
,&&E F
fileName&&G O
:&&O P
file&&Q U
.&&U V
FileName&&V ^
,&&^ _
HasFile&&_ f
)&&f g
;&&g h
await'' 
CopyFileAsync'' #
(''# $
$"''$ &
{''& '

uploadPath''' 1
}''1 2
$str''2 4
{''4 5
fileNewName''5 @
}''@ A
"''A B
,''B C
file''D H
)''H I
;''I J
datas(( 
.(( 
Add(( 
((( 
((( 
file(( 
.((  
Name((  $
,(($ %
$"((& (
{((( )
path(() -
}((- .
$str((. 0
{((0 1
file((1 5
.((5 6
Name((6 :
}((: ;
"((; <
)((< =
)((= >
;((> ?
}** 
return,, 
datas,, 
;,, 
}// 	
private11 
async11 
Task11 
<11 
bool11 
>11  
CopyFileAsync11! .
(11. /
string11/ 5
path116 :
,11: ;
	IFormFile11< E
file11F J
)11J K
{22 	
try33 
{44 
await55 
using55 

FileStream55 &

fileStream55' 1
=552 3
new554 7
(557 8
path558 <
,55< =
FileMode55> F
.55F G
Create55G M
,55M N

FileAccess55O Y
.55Y Z
Write55Z _
,55_ `
	FileShare55a j
.55j k
None55k o
,55o p
$num55q u
*55v w
$num55x |
,55| }
useAsync	55~ Ü
:
55Ü á
false
55à ç
)
55ç é
;
55é è
await66 
file66 
.66 
CopyToAsync66 &
(66& '

fileStream66' 1
)661 2
;662 3
await77 

fileStream77  
.77  !

FlushAsync77! +
(77+ ,
)77, -
;77- .
return88 
true88 
;88 
}99 
catch:: 
(:: 
	Exception:: 
ex:: 
)::  
{;; 
throw== 
ex== 
;== 
}>> 
}@@ 	
}AA 
}BB /
ïD:\Ki≈üisel\Private-Yazilim-Dersleri\Yazƒ±lƒ±m Dersleri\11-ETicaret\ETicaretAPI\Infrastructure\ETicaretAPI.Infrastructure\Services\Storage\Storage.cs
	namespace 	
ETicaretAPI
 
. 
Infrastructure $
.$ %
Services% -
.- .
Storage. 5
{ 
public 

class 
Storage 
{ 
	protected 
delegate 
bool 
HasFile  '
(' (
string( .
pathOrContainerName/ B
,B C
stringD J
fileNameK S
)S T
;T U
	protected		 
async		 
Task		 
<		 
string		 #
>		# $
FileRenameAsync		% 4
(		4 5
string		5 ;
pathOrContainerName		< O
,		O P
string		Q W
fileName		X `
,		` a
HasFile		a h
hasFileMethod		i v
,		v w
bool		x |
first			} Ç
=
		É Ñ
true
		Ö â
)
		â ä
{

 	
string 
newFileName 
=  
await! &
Task' +
.+ ,
Run, /
</ 0
string0 6
>6 7
(7 8
async8 =
(> ?
)? @
=>A C
{ 
string 
	extension  
=! "
Path# '
.' (
GetExtension( 4
(4 5
fileName5 =
)= >
;> ?
string 
newFileName "
=# $
string% +
.+ ,
Empty, 1
;1 2
if 
( 
first 
) 
{ 
string 
oldName "
=# $
Path% )
.) *'
GetFileNameWithoutExtension* E
(E F
fileNameF N
)N O
;O P
newFileName 
=  !
$"" $
{$ %
NameOperation% 2
.2 3
CharacterRegulatory3 F
(F G
oldNameG N
)N O
}O P
{P Q
	extensionQ Z
}Z [
"[ \
;\ ]
} 
else 
{ 
newFileName 
=  !
fileName" *
;* +
int 
indexNo1  
=! "
newFileName# .
.. /
IndexOf/ 6
(6 7
$str7 :
): ;
;; <
if 
( 
indexNo1  
==! #
-$ %
$num% &
)& '
newFileName #
=$ %
$"& (
{( )
Path) -
.- .'
GetFileNameWithoutExtension. I
(I J
newFileNameJ U
)U V
}V W
$strW Y
{Y Z
	extensionZ c
}c d
"d e
;e f
else 
{ 
int 
	lastIndex %
=& '
$num( )
;) *
while 
( 
true #
)# $
{ 
	lastIndex %
=& '
indexNo1( 0
;0 1
indexNo1   $
=  % &
newFileName  ' 2
.  2 3
IndexOf  3 :
(  : ;
$str  ; >
,  > ?
indexNo1  @ H
+  I J
$num  K L
)  L M
;  M N
if!! 
(!!  
indexNo1!!  (
==!!) +
-!!, -
$num!!- .
)!!. /
{"" 
indexNo1##  (
=##) *
	lastIndex##+ 4
;##4 5
break$$  %
;$$% &
}%% 
}&& 
int(( 
indexNo2(( $
=((% &
newFileName((' 2
.((2 3
IndexOf((3 :
(((: ;
$str((; >
)((> ?
;((? @
string)) 
fileNo)) %
=))& '
newFileName))( 3
.))3 4
	Substring))4 =
())= >
indexNo1))> F
+))G H
$num))I J
,))J K
indexNo2))L T
-))U V
indexNo1))W _
-))` a
$num))b c
)))c d
;))d e
if++ 
(++ 
int++ 
.++  
TryParse++  (
(++( )
fileNo++) /
,++/ 0
out++1 4
int++5 8
_fileNo++9 @
)++@ A
)++A B
{,, 
_fileNo-- #
++--# %
;--% &
newFileName.. '
=..( )
newFileName..* 5
...5 6
Remove..6 <
(..< =
indexNo1..= E
+..F G
$num..H I
,..I J
indexNo2..K S
-..T U
indexNo1..V ^
-.._ `
$num..a b
)..b c
.//0 1
Insert//1 7
(//7 8
indexNo1//8 @
+//A B
$num//C D
,//D E
_fileNo//F M
.//M N
ToString//N V
(//V W
)//W X
)//X Y
;//Y Z
}00 
else11 
newFileName22 '
=22( )
$"22* ,
{22, -
Path22- 1
.221 2'
GetFileNameWithoutExtension222 M
(22M N
newFileName22N Y
)22Y Z
}22Z [
$str22[ ]
{22] ^
	extension22^ g
}22g h
"22h i
;22i j
}44 
}55 
if77 
(77 
hasFileMethod77 !
(77! "
pathOrContainerName77" 5
,775 6
newFileName776 A
)77A B
)77B C
return88 
await88  
FileRenameAsync88! 0
(880 1
pathOrContainerName881 D
,88D E
newFileName88F Q
,88Q R
hasFileMethod88S `
,88` a
false88b g
)88g h
;88h i
else99 
return:: 
newFileName:: &
;::& '
};; 
);; 
;;; 
return== 
newFileName== 
;== 
}?? 	
}AA 
}BB ¢
úD:\Ki≈üisel\Private-Yazilim-Dersleri\Yazƒ±lƒ±m Dersleri\11-ETicaret\ETicaretAPI\Infrastructure\ETicaretAPI.Infrastructure\Services\Storage\StorageService.cs
	namespace		 	
ETicaretAPI		
 
.		 
Infrastructure		 $
.		$ %
Services		% -
.		- .
Storage		. 5
{

 
public 

class 
StorageService 
:  !
IStorageService" 1
{ 
private 
readonly 
IStorage !
_storage" *
;* +
public 
StorageService 
( 
IStorage &
storage' .
). /
{ 	
_storage 
= 
storage 
; 
} 	
public 
string 
StorageName !
{" #
get$ '
=>( *
_storage+ 3
.3 4
GetType4 ;
(; <
)< =
.= >
Name> B
;B C
}D E
public 
async 
Task 

DeleteAsyc $
($ %
string% +
pathOrContainerName, ?
,? @
stringA G
fileNameH P
)P Q
=> 
await 
_storage 
. 

DeleteAsyc (
(( )
pathOrContainerName) <
,< =
fileName> F
)F G
;G H
public 
List 
< 
string 
> 
GetFiles $
($ %
string% +
pathOrContainerName, ?
)? @
=> 
_storage 
. 
GetFiles  
(  !
pathOrContainerName! 4
)4 5
;5 6
public 
bool 
HasFile 
( 
string "
pathOrContainerName# 6
,6 7
string8 >
fileName? G
)G H
=> 
_storage 
. 
HasFile 
(  
pathOrContainerName  3
,3 4
fileName5 =
)= >
;> ?
public   
Task   
<   
List   
<   
(   
string    
fileName  ! )
,  ) *
string  + 1
path  2 6
)  6 7
>  7 8
>  8 9
UploadAsync  : E
(  E F
string  F L
pathOrContainerName  M `
,  ` a
IFormFileCollection  b u
files  v {
)  { |
=>!! 
_storage!! 
.!! 
UploadAsync!! #
(!!# $
pathOrContainerName!!$ 7
,!!7 8
files!!9 >
)!!> ?
;!!? @
}## 
}$$ Ú"
òD:\Ki≈üisel\Private-Yazilim-Dersleri\Yazƒ±lƒ±m Dersleri\11-ETicaret\ETicaretAPI\Infrastructure\ETicaretAPI.Infrastructure\Services\Token\TokenHandler.cs
	namespace

 	
ETicaretAPI


 
.

 
Infrastructure

 $
.

$ %
Services

% -
.

- .
Token

. 3
{ 
public 

class 
TokenHandler 
: 
ITokenHandler  -
{ 
IConfiguration 
_configuration %
;% &
public 
TokenHandler 
( 
IConfiguration *
configuration+ 8
)8 9
{ 	
_configuration 
= 
configuration *
;* +
} 	
public 
Application 
. 
DTOs 
.  
Token  %
CreateAccessToken& 7
(7 8
int8 ;
minute< B
,B C
AppUserD K
userL P
)P Q
{ 	
Application 
. 
DTOs 
. 
Token "
token# (
=) *
new+ .
(. /
)/ 0
;0 1 
SymmetricSecurityKey  
securityKey! ,
=- .
new/ 2
(2 3
Encoding3 ;
.; <
UTF8< @
.@ A
GetBytesA I
(I J
_configurationJ X
[X Y
$strY l
]l m
)m n
)n o
;o p
SigningCredentials 
signingCredentials 1
=2 3
new4 7
(7 8
securityKey8 C
,C D
SecurityAlgorithmsE W
.W X

HmacSha256X b
)b c
;c d
token 
. 

Expiration 
= 
DateTime '
.' (
UtcNow( .
.. /

AddMinutes/ 9
(9 :
minute: @
)@ A
;A B
JwtSecurityToken 
securityToken *
=+ ,
new- 0
(0 1
audience   
:   
_configuration   (
[  ( )
$str  ) 9
]  9 :
,  : ;
issuer!! 
:!! 
_configuration!! &
[!!& '
$str!!' 5
]!!5 6
,!!6 7
expires"" 
:"" 
token"" 
."" 

Expiration"" )
,"") *
	notBefore## 
:## 
DateTime## #
.### $
UtcNow##$ *
,##* +
signingCredentials$$ "
:$$" #
signingCredentials$$$ 6
,$$6 7
claims%% 
:%% 
new%% 
List%%  $
<%%$ %
Claim%%% *
>%%* +
{%%, -
new&& 
(&& 

ClaimTypes&& &
.&&& '
Name&&' +
,&&+ ,
user&&- 1
.&&1 2
UserName&&2 :
)&&: ;
}'' 
)(( 
;(( #
JwtSecurityTokenHandler** #
tokenHandler**$ 0
=**1 2
new**3 6
(**6 7
)**7 8
;**8 9
token++ 
.++ 
AccessToken++ 
=++ 
tokenHandler++  ,
.++, -

WriteToken++- 7
(++7 8
securityToken++8 E
)++E F
;++F G
token,, 
.,, 
RefreshToken,, 
=,,  
CreateRefreshToken,,! 3
(,,3 4
),,4 5
;,,5 6
return-- 
token-- 
;-- 
}.. 	
public00 
string00 
CreateRefreshToken00 (
(00( )
)00) *
{11 	
byte22 
[22 
]22 
number22 
=22 
new22 
byte22  $
[22$ %
$num22% '
]22' (
;22( )
using33 !
RandomNumberGenerator33 '
random33( .
=33/ 0!
RandomNumberGenerator331 F
.33F G
Create33G M
(33M N
)33N O
;33O P
random44 
.44 
GetBytes44 
(44 
number44 "
)44" #
;44# $
return55 
Convert55 
.55 
ToBase64String55 )
(55) *
number55* 0
)550 1
;551 2
}77 	
}88 
}99 